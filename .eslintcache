[{"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\index.js":"1","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\reportWebVitals.js":"2","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\routes.js":"3","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\index.js":"4","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\login\\login.js":"5","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\home\\index.js":"6","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\jobs\\index.js":"7","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\NotFound\\notfound.js":"8","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\singlepost.js":"9","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\orderassignment.js":"10","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\protectedRoute\\protected_route.js":"11","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\index.js":"12","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\posthighlight.js":"13","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postlist.js":"14","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postcategories.js":"15","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postslider.js":"16","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\header.js":"17","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\authservice.js":"18","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\testimonials\\index.js":"19","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\footer\\appFooter.js":"20","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Widgets\\modal\\index.js":"21","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.payrates.js":"22","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.services.js":"23","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.bio.js":"24","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.testimonials.js":"25","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.worksamples.js":"26","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_formats.js":"27","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\place_order.js":"28","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_cats.js":"29","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\orders.js":"30","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_langs.js":"31","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\archived_orders.js":"32","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\context\\posts.context.js":"33","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\reducers\\post.reducer.js":"34","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\index.js":"35","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\nav.academics.js":"36","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\authheader.js":"37","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\dashboard.sidenav.js":"38","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\tables.js":"39","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\funcs.js":"40","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\skeleton.js":"41","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\reducers\\featuredpost.reducer.js":"42","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\context\\featuredpost.context.js":"43"},{"size":831,"mtime":1617982185175,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1616353177103,"results":"46","hashOfConfig":"45"},{"size":5326,"mtime":1618053505728,"results":"47","hashOfConfig":"45"},{"size":1409,"mtime":1618044705868,"results":"48","hashOfConfig":"45"},{"size":2891,"mtime":1616353176751,"results":"49","hashOfConfig":"45"},{"size":3378,"mtime":1618053524864,"results":"50","hashOfConfig":"45"},{"size":3551,"mtime":1616353176738,"results":"51","hashOfConfig":"45"},{"size":219,"mtime":1616353176500,"results":"52","hashOfConfig":"45"},{"size":14974,"mtime":1618053978430,"results":"53","hashOfConfig":"45"},{"size":8353,"mtime":1616353176513,"results":"54","hashOfConfig":"45"},{"size":446,"mtime":1616353177002,"results":"55","hashOfConfig":"45"},{"size":785,"mtime":1616353176988,"results":"56","hashOfConfig":"45"},{"size":2955,"mtime":1618049442412,"results":"57","hashOfConfig":"45"},{"size":3495,"mtime":1618046625153,"results":"58","hashOfConfig":"45"},{"size":626,"mtime":1616353176781,"results":"59","hashOfConfig":"45"},{"size":2079,"mtime":1616353176824,"results":"60","hashOfConfig":"45"},{"size":2902,"mtime":1616353176976,"results":"61","hashOfConfig":"45"},{"size":1436,"mtime":1616353176915,"results":"62","hashOfConfig":"45"},{"size":5589,"mtime":1616353176880,"results":"63","hashOfConfig":"45"},{"size":2796,"mtime":1617633631709,"results":"64","hashOfConfig":"45"},{"size":1788,"mtime":1616353177033,"results":"65","hashOfConfig":"45"},{"size":1974,"mtime":1617633348465,"results":"66","hashOfConfig":"45"},{"size":2192,"mtime":1617633155759,"results":"67","hashOfConfig":"45"},{"size":1623,"mtime":1617631661843,"results":"68","hashOfConfig":"45"},{"size":1994,"mtime":1617633394808,"results":"69","hashOfConfig":"45"},{"size":2168,"mtime":1617633257886,"results":"70","hashOfConfig":"45"},{"size":8926,"mtime":1616353176584,"results":"71","hashOfConfig":"45"},{"size":15442,"mtime":1616353176657,"results":"72","hashOfConfig":"45"},{"size":8797,"mtime":1616353176557,"results":"73","hashOfConfig":"45"},{"size":3927,"mtime":1616353176641,"results":"74","hashOfConfig":"45"},{"size":729,"mtime":1616353176611,"results":"75","hashOfConfig":"45"},{"size":784,"mtime":1616353176544,"results":"76","hashOfConfig":"45"},{"size":234,"mtime":1617979222761,"results":"77","hashOfConfig":"45"},{"size":576,"mtime":1618044005872,"results":"78","hashOfConfig":"45"},{"size":2228,"mtime":1616353176705,"results":"79","hashOfConfig":"45"},{"size":1123,"mtime":1617633028476,"results":"80","hashOfConfig":"45"},{"size":335,"mtime":1616353176897,"results":"81","hashOfConfig":"45"},{"size":3144,"mtime":1616353176689,"results":"82","hashOfConfig":"45"},{"size":911,"mtime":1616353176943,"results":"83","hashOfConfig":"45"},{"size":491,"mtime":1616353176930,"results":"84","hashOfConfig":"45"},{"size":578,"mtime":1618036446939,"results":"85","hashOfConfig":"45"},{"size":594,"mtime":1618043999074,"results":"86","hashOfConfig":"45"},{"size":306,"mtime":1618042898970,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"4q3x5s",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\index.js",[],["188","189"],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\reportWebVitals.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\routes.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\index.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\login\\login.js",["190"],"import React, {useState} from 'react'\r\nimport { useForm } from \"react-hook-form\"; \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AuthService from '../../HOC/helpers/authservice';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default function Login(props) {\r\n    // states\r\n\r\n    const [logged_in, setLogged_in] = useState(false)\r\n    const [loading, setLoading] = useState('')\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => {\r\n        setLoading(\"Loading ...\");\r\n        try {\r\n            \r\n            AuthService.login(data.email, data.password).then(res => {\r\n                if(res.code === 1){\r\n                    toast.success(res.msg);\r\n                    // window.updateHeader();\r\n                    setLogged_in(true);\r\n                }else{\r\n                    toast.error(res.msg);\r\n                }\r\n                setLoading(\"\");\r\n                return res;\r\n            })\r\n        } catch (error) {\r\n            alert('sd')\r\n        }\r\n    };\r\n\r\n    if(logged_in){\r\n        return <Redirect to='/dashboard'  />\r\n    }else{\r\n\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <ToastContainer />\r\n                        <div className=\"col-md-12 mt-5 mb-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <form className=\"form mt-5\"  onSubmit={handleSubmit(onSubmit)}>\r\n                                        <p> {loading} </p>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"email\">Email:</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\"  ref={register} placeholder=\"Enter Email ...\"/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"password\">Password:</label>\r\n                                            <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\"  ref={register} placeholder=\"Enter Password ...\"/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <button type=\"submit\" className=\"btn btn-info\">Login</button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\home\\index.js",["191"],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\jobs\\index.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\NotFound\\notfound.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\singlepost.js",["192","193","194","195","196","197","198","199"],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\orderassignment.js",["200","201","202","203","204"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nexport default function Orderassignment(props) {\r\n    // decrare states\r\n    const [blogCat, setBlogCat] = useState([]);\r\n    const [blogFormat, setBlogFormat] = useState([]);\r\n    const [blogLang, setBlogLang] = useState([]);\r\n    const [visible, setVisible] = useState(false);\r\n    const [feedback, setFeedback] = useState(\"processing ...\");\r\n    const [wordcount, setWordcount] = useState(275);\r\n\r\n\r\n    // call data from server\r\n    useEffect(() => {\r\n        // call categories\r\n        callFromServer(`${process.env.REACT_APP_API_URL}fetch_order_cats`, setBlogCat)\r\n        // formats\r\n        callFromServer(`${process.env.REACT_APP_API_URL}fetch_order_formats`, setBlogFormat)\r\n        // lang\r\n        callFromServer(`${process.env.REACT_APP_API_URL}fetch_order_langs`, setBlogLang)\r\n    }, [])\r\n\r\n    const { register,reset, handleSubmit, errors } = useForm();\r\n    const onSubmit = data => {\r\n\r\n    }\r\n\r\n    // functions\r\n    const calcWordcount = (event) => {\r\n        let val = event.target.value * 275\r\n        setWordcount(val)\r\n    }\r\n\r\n    const displayOrderCategories = () => {\r\n        // console.log({blogCat})\r\n        \r\n        if(blogCat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogCat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // formats\r\n    const displayOrderFormats = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogFormat.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogFormat.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // displayOrderLang\r\n    const displayOrderLang = () => {\r\n        // console.log({blogFormat})\r\n        \r\n        if(blogLang.length < 1){\r\n            var cats = <option> -- select --</option>\r\n        }else{\r\n\r\n            cats = blogLang.map((item, i) =>  (\r\n    \r\n                <option key={i} value={item.id}>{item.name}</option>\r\n     \r\n            ))\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    // call data from server\r\n    const callFromServer = (url, stateset) => {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            stateset(data.data)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5 mb-5\">\r\n                    <div className=\"col-sm-12 -bottom-8\">\r\n                        <h5 className=\"primary-color btr-6 p-3\">Order Assignment !!!</h5>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"card p-3\">\r\n                            <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\" id=\"nil_order\" className=\"form row\">\r\n\r\n                                <input type=\"hidden\" value='00' name=\"user_id\" ref={register()} />\r\n                                <input type=\"hidden\" defaultValue={'Y'} name=\"nil\" ref={register()} />\r\n\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input id=\"email\" name=\"email\" type=\"text\" className=\"form-control\" placeholder=\"Enter Email\" ref={register({ required: true })} />\r\n                                    {errors.email && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-8\">\r\n                                    <label htmlFor=\"title\">Title</label>\r\n                                    <input id=\"title\" name=\"title\" type=\"text\" className=\"form-control\" placeholder=\"Enter Title\" ref={register({ required: true })} />\r\n                                    {errors.title && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"category\">Category</label>\r\n                                    <select id=\"category\" className=\"form-control browser-default\" name=\"category_id\" ref={register({ required: true })}>\r\n                                        <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                        {displayOrderFormats()}\r\n                                    </select>\r\n                                    {errors.category_id && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"format\">Format</label>\r\n                                    <select id=\"format\" className=\"form-control browser-default\" name=\"format_id\" ref={register({ required: true })}>\r\n                                        <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                        {displayOrderCategories()}\r\n\r\n                                    </select>\r\n                                    {errors.format_id && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"language\">Language</label>\r\n                                    <select id=\"language\" className=\"form-control browser-default\" name=\"language_id\" ref={register({ required: true })}>\r\n                                        <option value=\"\" disabled defaultValue>Choose your option</option>\r\n                                        {displayOrderLang()}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"pages\">Page(s)</label>\r\n                                    <input id=\"pages\" name=\"pages\" type=\"number\" className=\"form-control\" placeholder=\"Enter Pages\" ref={register({ required: true })} onChange={(e) => calcWordcount(e)} />\r\n                                    {errors.pages && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-4\">\r\n                                    <label htmlFor=\"word_count\">Word Count</label>\r\n                                    <input id=\"word_count\" name=\"word_count\" type=\"number\" className=\"form-control\" value={wordcount} ref={register({ required: true })} onChange={(e) => setWordcount(e.target.value)} />\r\n                                    {errors.word_count && <span className=\"red_message\">This field is required</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-sm-12\">\r\n                                    <label htmlFor=\"notes\">Notes</label>\r\n                                    <textarea id=\"notes\" name=\"notes\" className=\"form-control\" placeholder=\"Enter Additional Info\"></textarea>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group col-sm-12\">\r\n\r\n                                    <p> Documents <small> <i> - (hold CTRL to select multiple docs)</i></small> </p>\r\n                                    <input type=\"file\" id=\"docs\" className=\"form-control\" name=\"file\" multiple />\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                                <br />\r\n                                <div className=\"input-field col s12\">\r\n\r\n                                    <input className=\"btn btn-success\" type=\"submit\" />\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\protectedRoute\\protected_route.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\index.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\posthighlight.js",["205","206"],"import React, { useContext, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport AuthService from '../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../HOC/helpers/authheader';\r\nimport {  PostHighlightContext } from '../../store/context/featuredpost.context';\r\nimport  Skeleton from '../../HOC/helpers/skeleton'\r\n\r\nexport default function Posthighlight(props) {\r\n    // featured post reducer here  \r\n    const meta_postshighlight  = useContext(PostHighlightContext); \r\n    useEffect(async () => {\r\n        // call posts\r\n        const fetch_posts = AuthService.API_URL + 'fetch_blog';\r\n        const headers = authHeader();\r\n        let dataposts = await axios.get(fetch_posts, {\r\n            headers: headers\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n            meta_postshighlight.dispatchFeaturedposts({type:\"FAIL\", payload: err.message})\r\n        });\r\n        meta_postshighlight.dispatchFeaturedposts({type:\"SUCCESS\", payload: dataposts.data.data})\r\n        console.log(meta_postshighlight);\r\n    }, [])\r\n\r\n\r\n    //render post card\r\n    const postCard = () => {\r\n        if(meta_postshighlight.featuredposts.payload.length > 0){\r\n            return meta_postshighlight.featuredposts.payload.map((post,i)=>(\r\n                <div className=\"col-sm-12 p-0\" key={i}>\r\n                    <div className=\"card mb-1\" >\r\n                        <div className=\"row no-gutters\" style={{ overflow: 'hidden', position: \"relative\"}}>\r\n                            <div className=\"col-sm-12 col-md-4 cover_img\" style={{\r\n                                overflow: 'hidden', \r\n                                position: \"relative\", \r\n                                background: `url('${AuthService.IMG_URL}storage/${post.media_link.replace('public/', '')}')`}}>\r\n                            </div>\r\n                            <div className=\"col-sm-12 col-md-8\">\r\n                            <div className=\"card-body\">\r\n                                <b className=\"card-title\" style={{ fontSize: 'small' }}> {post.title} </b>\r\n                                <p className=\"card-text\" style={{ overflow: 'hidden',height:\"2rem\", fontSize: 'small' }}>\r\n                                    { post.description }\r\n                                </p>\r\n\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        }}\r\n\r\n        \r\n    // check if there are featured posts\r\n    if(meta_postshighlight.featuredposts.loading && !meta_postshighlight.featuredposts.error){\r\n        console.log(meta_postshighlight.featuredposts.error);\r\n        return (\r\n            <>\r\n                <Skeleton />\r\n                <Skeleton />\r\n                <Skeleton />\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\r\n            { postCard() }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postlist.js",["207","208"],"import React, { useContext, useEffect }  from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';  \r\n\r\n// dependencies \r\nimport { PostContext } from '../../store/context/posts.context'\r\nimport  Skeleton from '../../HOC/helpers/skeleton'\r\n\r\nimport AuthService from '../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../HOC/helpers/authheader';\r\n\r\nexport default function Postlist(props) {\r\n    const meta_posts  = useContext(PostContext);\r\n    useEffect(async () => {\r\n        // call posts\r\n        const fetch_blogs = AuthService.API_URL + 'fetch_blog';\r\n        const headers = authHeader();\r\n        let data = await axios.get(fetch_blogs, {\r\n            headers: headers\r\n          }).catch(err => {\r\n            console.log(err.message)\r\n            meta_posts.dispatchPosts({type:\"FAIL\", payload: err.message})\r\n          });\r\n          meta_posts.dispatchPosts({type:\"SUCCESS\", payload: data.data.data})\r\n    }, [])\r\n\r\n\r\n    //render post card\r\n    const postCard = () => {\r\n        if(meta_posts.posts.payload.length > 0){\r\n            return meta_posts.posts.payload.map((post,i)=>(\r\n                <div className=\"card mb-3\" key={i}>\r\n                    <div className=\"row no-gutters\" style={{ overflow: 'hidden', position: \"relative\"}}>\r\n                        <div className=\"col-sm-12 col-md-4 cover_img\" style={{ \r\n                            overflow: 'hidden', \r\n                            position: \"relative\", \r\n                            background: `url('${AuthService.IMG_URL}storage/${post.media_link.replace('public/', '')}')`}}>\r\n                        </div>\r\n                        <div className=\"col-sm-12 col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-title\"> {post.title} </h6>\r\n                            <p className=\"card-text\" style={{ overflow: 'hidden',height:\"4rem\" }}>\r\n                                { post.description }\r\n                            </p>\r\n                            <hr/>\r\n                            <div>\r\n                                <Link to={`post/${post.id}/${post.title}`} className=\"btn btn-sm btn-info float-right primary-color\"> view </Link>\r\n                                <p className=\"card-text\"><small className=\"text-muted\">Last updated; <Moment fromNow>{ post.updated_at }</Moment></small></p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        }\r\n    }\r\n\r\n    if(meta_posts.posts.loading){\r\n        return (\r\n            <>\r\n            <Skeleton />\r\n            <Skeleton />\r\n           </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"postlist\">\r\n                <div className=\"search_posts pt-2 pb-1\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Search a post ...\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text primary-color\" id=\"basic-addon2\">GO</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                { postCard() }\r\n\r\n              \r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postcategories.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\posts\\postslider.js",["209","210","211"],"import React from 'react'\r\n\r\nexport default function postslider(props) {\r\n    console.log(props.height);\r\n    return (\r\n        <React.Fragment>\r\n            <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                <ol className=\"carousel-indicators\">\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n                </ol>\r\n                <div className=\"carousel-inner br-6\">\r\n                    <div className=\"carousel-item active\">\r\n                    <img src=\"/images/blog_grid_05.jpg\" className=\"cover_img\" height = {props.height} className=\"d-block w-100\" alt=\"/images/blog_grid_05.jpg\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                    <img src=\"/images/big_blog_01.jpg\" className=\"cover_img\" height = {props.height} className=\"d-block w-100\" alt=\"/images/big_blog_01.jpg\" />\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                    <img src=\"/images/blog_grid_04.jpg\" className=\"cover_img\" height = {props.height} className=\"d-block w-100\" alt=\"/images/blog_grid_04.jpg\" />\r\n                    </div>\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                </a>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\header.js",["212"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function header(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light primary-color-dark fixed-top\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">ResearchBrisk</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n                    <ul className=\"navbar-nav ml-auto my-2 my-lg-0 navbar-nav-scroll\" style={{maxHeight: '60vh'}}>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarScrollingDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Academic\r\n                            </a>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarScrollingDropdown\">\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Academic Bio</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Pay Rates</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Services</Link></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"#\">Work Samples</Link></li>\r\n                            <li><hr className=\"dropdown-divider\" /></li>\r\n                            <li><Link className=\"dropdown-item\" to=\"orderassignment\">Order An Assignment</Link></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"#\">Contact us</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/posts\">Posts </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/jobs\" tabIndex=\"-1\" aria-disabled=\"true\">Jobs</Link>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\authservice.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\testimonials\\index.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\layout\\footer\\appFooter.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Widgets\\modal\\index.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.payrates.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.services.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.bio.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.testimonials.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\academic.worksamples.js",["213","214"],"import React from 'react'\r\nimport Navacademics from './nav.academics'  \r\n\r\nexport default function Academicpayrates(props) {\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"m-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <h3 className=\"text-muted text-center\">Academic Work Samples</h3> <hr />\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-md-3 d-none d-md-block\">\r\n                        <Navacademics />\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-sm-9\">\r\n                        \r\n                        <p className=\"text-justify font-weight-light\">\r\n                            <div class=\"card m-3\" >\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Card work sample 1</h5>\r\n                                    <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle work sample 1</h6>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                    <a href=\"#\" class=\"card-link\">Download document</a>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"card m-3\" >\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Card work sample 2</h5>\r\n                                    <h6 className=\"card-subtitle mb-2 text-muted\">Card subtitle payrate 2</h6>\r\n                                    <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                                    <a href=\"#\" class=\"card-link\">Download document</a>\r\n                                </div>\r\n                            </div>\r\n                      \r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_formats.js",["215"],"import React, { useState, useEffect } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\n\r\nimport AppSideNav from './../dashboard.sidenav';\r\nimport { tb_options } from '../../../HOC/helpers/tables';\r\nimport AuthService from '../../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../../HOC/helpers/authheader';\r\nimport Modal from './../../../Widgets/modal'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Order_formats(props) {\r\n\r\n    // states\r\n    const [order_formats, setOrder_formats] = useState([]);\r\n    const [show_modal, setShow_modal] = useState(false);\r\n    const [format_title, setFormat_title] = useState('');\r\n    const [format_descr, setFormat_descr] = useState('');\r\n    const [add_flag, setAdd_flag] = useState('A');\r\n    const [format_id, setFormat_id] = useState('');\r\n\r\n\r\n    const headers = authHeader();\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    console.log(AuthService.API_URL);\r\n    // fetch order formats data \r\n    const fetch_order_formats = AuthService.API_URL + 'fetch_order_formats';\r\n    const post_order_formats = AuthService.API_URL + 'post_order_format';\r\n    useEffect(() => {\r\n        axios.get(fetch_order_formats, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_formats(res.data.data)\r\n        });\r\n\r\n    }, []);\r\n\r\n    const addFormat = () => {\r\n        setAdd_flag('A');\r\n        setFormat_title('')\r\n        setFormat_descr('')\r\n        setShow_modal(true);\r\n    }\r\n\r\n    const editFormat = (id) => {\r\n        setAdd_flag('E');\r\n        setFormat_id(id);\r\n        axios.get(AuthService.API_URL + 'get_order_format/' + id).then(res => {\r\n            console.log(res.data);\r\n            setFormat_title(res.data.name)\r\n            setFormat_descr(res.data.description)\r\n        })\r\n        setShow_modal(true);\r\n    }\r\n\r\n    const delFormat = (id) => {\r\n        let data = '';\r\n        axios.post(AuthService.API_URL + 'delOrder_format/' + id, data, {\r\n            headers: headers\r\n        }).then(res => {\r\n            if (res.data.code === 1) {\r\n                toast.success(res.data.msg);\r\n            } else {\r\n                toast.error('Failed to remove Item');\r\n            }\r\n            toast.success('sucess')\r\n            setTimeout(() => { window.location.reload() }, 1500)\r\n        }).catch(\r\n            err => toast.error('Something went wrong')\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const tb_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"name\",\r\n            label: \"Title\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"description\",\r\n            label: \"Description\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"active\",\r\n            label: \"Active\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Action',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRender: (dataIndex, rowData) => {\r\n                    return (\r\n                        <>\r\n                            <button onClick={() => editFormat(rowData.rowData[0])} className=\"btn btn-success btn-sm mr-2\"><i className=\"fa fa-edit\"></i> </button>\r\n                            <button onClick={() => delFormat(rowData.rowData[0])} className=\"btn btn-danger btn-sm\"><i className=\"fa fa-trash\"></i> </button>\r\n                        </>\r\n                    );\r\n                }\r\n            },\r\n        }\r\n    ];\r\n\r\n    const tb_data = order_formats;\r\n\r\n\r\n    // send data\r\n    const onSubmit = data => {\r\n        let url = null;\r\n        (data.add_flag === 'A') ? url = post_order_formats : url = AuthService.API_URL + 'patchOrder_format/' + format_id;\r\n        axios.post(url, data, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_formats(res.data.data);\r\n            setShow_modal(false);\r\n            window.location.reload()\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\" dashboard-container\">\r\n            <div className=\"row mr-0\">\r\n                <AppSideNav />\r\n\r\n                <div className=\"col-sm-9\">\r\n                    <h2 className=\"mt-4\">Order Formats</h2> <hr />\r\n\r\n                    <Modal isOpen={show_modal}\r\n                        close={() => setShow_modal(false)}\r\n                        title={'Add|Edit Order Format'}\r\n                    >\r\n                        <article>\r\n                            <form\r\n                                method=\"post\"\r\n                                className=\"form\"\r\n                                encType=\"multipart/form-data\"\r\n                                onSubmit={handleSubmit(onSubmit)}\r\n                            >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <input type=\"hidden\" value={add_flag} name=\"add_flag\" ref={register()} />\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"format_title\">Title:</label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                id=\"format_title\"\r\n                                                name=\"name\"\r\n                                                value={format_title}\r\n                                                placeholder=\"Enter title of format\"\r\n                                                ref={register({ required: true })}\r\n                                                onChange={(e) => setFormat_title(e.target.value)}\r\n                                            />\r\n                                            <p className=\"text_red\">{errors.name && \" Name is required\"}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"format_descr\">Description:</label>\r\n                                            <textarea\r\n                                                rows={2}\r\n                                                className=\"form-control\"\r\n                                                id=\"format_descr\"\r\n                                                name=\"description\"\r\n                                                value={format_descr}\r\n                                                placeholder=\"Enter title of description\"\r\n                                                ref={register({ required: true })}\r\n                                                onChange={(e) => setFormat_descr(e.target.value)}\r\n                                            />\r\n                                            <p className=\"text_red\">{errors.description && \"Description is required\"}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <button type=\"submit\" className=\"btn btn-info\">Save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            {/* <!-- .form --> */}\r\n                        </article>\r\n                    </Modal>\r\n\r\n                    <div className=\"table-responsive\">\r\n                        <button className=\"btn btn-info btn-sm mb-2\" onClick={addFormat}>\r\n                            <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>  Add\r\n                        </button>\r\n                        <MUIDataTable\r\n                            title={\"Order Formats Table\"}\r\n                            data={tb_data}\r\n                            columns={tb_columns}\r\n                            options={tb_options}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\place_order.js",["216","217","218"],"import React, { useState, useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport AppSideNav from './../dashboard.sidenav';\r\nimport AuthService from '../../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../../HOC/helpers/authheader';\r\nimport axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Place_order(props) {\r\n\r\n\r\n    // states\r\n    const [add_flag, setAdd_flag] = useState('A');\r\n    const [order_miscs, setOrder_miscs] = useState([]);\r\n    const [order_cats, setOrder_cats] = useState([]);\r\n    const [order_formats, setOrder_formats] = useState([]);\r\n    const [order_langs, setOrder_langs] = useState([]);\r\n\r\n    // form states\r\n    const [email, setEmail] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [pages, setPages] = useState('');\r\n    const [wordcount, setWordcount] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const headers = authHeader();\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let url = AuthService.API_URL + 'order_miscs';\r\n        axios.get(url, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_miscs(res.data);\r\n            setOrder_cats(res.data.cats);\r\n            setOrder_formats(res.data.formats);\r\n            setOrder_langs(res.data.langs);\r\n        });\r\n        let user = AuthService.getCurrentUser();\r\n        setEmail(user.email);\r\n    }, []);\r\n\r\n    const renderCats = () =>{\r\n        let template = null;\r\n        if(order_cats.length > 0){\r\n            template = order_cats.map((item, i) => (\r\n                <option key={i} value={item.id}> {item.name}</option>\r\n            ))\r\n        }\r\n        return template;\r\n    }\r\n\r\n    const renderFormats = () =>{\r\n        let template = null;\r\n        if(order_formats.length > 0){\r\n            template = order_formats.map((item, i) => (\r\n                <option key={i} value={item.id}> {item.name}</option>\r\n            ))\r\n        }\r\n        return template;\r\n    }\r\n\r\n    const renderLangs = () =>{\r\n        let template = null;\r\n        if(order_langs.length > 0){\r\n            template = order_langs.map((item, i) => (\r\n                <option key={i} value={item.id}> {item.name}</option>\r\n            ))\r\n        }\r\n        return template;\r\n    }\r\n\r\n\r\n    // send data\r\n    const onSubmit = data => {\r\n        let url = null;\r\n        let data2 = new FormData(document.querySelector(\"#order_form\"));\r\n        (add_flag === 'A') ? url =  AuthService.API_URL + 'post_order' : url = AuthService.API_URL + 'patchOrder/'+ props.order_id;\r\n        console.log(url);\r\n        axios.post(url, data2, {\r\n            headers: headers\r\n        }).then(res => {\r\n            console.log(res.data);\r\n            if(+res.data.code === 1){\r\n                toast.success(res.data.msg)\r\n            }else{\r\n                toast.error('Order did not add')\r\n            }\r\n            // setShow_modal(false); \r\n            setTimeout(() => {\r\n                window.location.reload()                \r\n            }, 1500);\r\n        }).catch(err => toast.error('Something went wrong'));\r\n    };\r\n\r\n    // find wordcount per page\r\n    const calcWordcount = (event) => {\r\n        let val = event.target.value * 275\r\n        setPages(event.target.value)\r\n        setWordcount(val)\r\n    }\r\n\r\n    \r\n    return (\r\n        <section>\r\n            <div className=\"dashboard-container\">\r\n            {/* <ToastContainer /> */}\r\n                <div className=\"row mr-0\">\r\n                    <div className=\"col-sm-2 sidenav_dashboard\">\r\n                        <AppSideNav />\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-10\">\r\n                        <h2>Place order</h2> <hr />\r\n                        <form\r\n                            method=\"post\"\r\n                            className=\"form\"\r\n                            id=\"order_form\"\r\n                            encType=\"multipart/form-data\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                        >\r\n                            <div className=\"row mr-0\">\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            placeholder=\"Enter email\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                            readOnly\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.name && \" Name is required\"}</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"title\">Title:</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            value={title}\r\n                                            placeholder=\"Enter title\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.description && \"Description is required\"}</p>\r\n\r\n                                    </div> <hr/>\r\n                                </div>\r\n                                {/* col-md-6 */}\r\n\r\n                                <div className=\"col-md-2\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"pages\">Pages:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"number\"\r\n                                            id=\"pages\"\r\n                                            name=\"pages\"\r\n                                            value={pages}\r\n                                            placeholder=\"Enter pages\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange = {(e) => calcWordcount(e)}\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.pages && \"pages are required\"}</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* col-md-3 */}\r\n\r\n\r\n                                <div className=\"col-md-2\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"wordcount\">Word Count:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"number\"\r\n                                            id=\"wordcount\"\r\n                                            name=\"wordcount\"\r\n                                            value={wordcount}\r\n                                            placeholder=\"Wordcount\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange={(e) => setWordcount(e.target.value)}\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.description && \"Word Count is required\"}</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {/* col-md-3 */}\r\n\r\n{/* \r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"row\"> */}\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"category\">Category:</label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    id=\"category\"\r\n                                                    name=\"order_category_id\"\r\n                                                    ref={register({ required: true })}\r\n                                                    \r\n                                                >\r\n                                                    <option defaultValue> -- select -- </option>\r\n                                                    {renderCats()}\r\n                                                </select>\r\n                                                <p className=\"text_red\">{errors.order_category_id && \"Category is required\"}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* col-md-4 */}\r\n\r\n                                        <div className=\"col-md-3\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"format\">Format:</label>\r\n                                                <select\r\n                                                    rows={2}\r\n                                                    className=\"form-control\"\r\n                                                    id=\"format\"\r\n                                                    name=\"order_format_id\"\r\n                                                    ref={register({ required: true })}\r\n                                                    // onChange={(e) => setTitle(e.target.value)}\r\n                                                >\r\n                                                    <option defaultValue> -- select -- </option>\r\n                                                    {renderFormats()}\r\n                                                </select>\r\n                                                <p className=\"text_red\">{errors.order_format_id && \"Description is required\"}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* col-md-4 */}\r\n\r\n                                        <div className=\"col-md-2\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"lang\">Lang:</label>\r\n                                                <select\r\n                                                    rows={2}\r\n                                                    className=\"form-control\"\r\n                                                    id=\"lang\"\r\n                                                    name=\"order_language_id\"\r\n                                                    ref={register({ required: true })}\r\n                                                    // onChange={(e) => setTitle(e.target.value)}\r\n                                                >\r\n                                                    <option defaultValue> -- select -- </option>\r\n                                                    {renderLangs()}\r\n                                                </select>\r\n                                                <p className=\"text_red\">{errors.order_language_id && \"Lang is required\"}</p>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* col-md-4 */}\r\n\r\n                                    {/* </div>\r\n                                    <hr />\r\n\r\n                                </div> */}\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"description\">Description:</label>\r\n                                        <textarea\r\n                                            rows={2}\r\n                                            className=\"form-control\"\r\n                                            type=\"number\"\r\n                                            id=\"description\"\r\n                                            name=\"description\"\r\n                                            value={description}\r\n                                            placeholder=\"Enter description\"\r\n                                            ref={register({ required: true })}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.description && \"Description is required\"}</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"description\">Attachments:</label>\r\n                                        <input\r\n                                            multiple\r\n                                            className=\"form-control\"\r\n                                            type=\"file\"\r\n                                            id=\"attachments\"\r\n                                            name=\"file[]\"\r\n                                            // value={attachments}\r\n                                            placeholder=\"Enter attachments\"\r\n                                            ref={register({ required: true })}\r\n                                            // onChange={(e) => setTitle(e.target.value)}\r\n                                        />\r\n                                        <p className=\"text_red\">{errors.file && \"attachments  required\"}</p>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row mb-5 mr-0\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <button type=\"submit\" className=\"btn btn-info\">Save</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        {/* <!-- .form --> */} \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_cats.js",["219"],"import React, { useState, useEffect } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\n\r\nimport AppSideNav from './../dashboard.sidenav';\r\nimport { tb_options } from '../../../HOC/helpers/tables';\r\nimport AuthService from '../../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../../HOC/helpers/authheader';\r\nimport Modal from './../../../Widgets/modal'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Order_cats(props) {\r\n\r\n    // states\r\n    const [order_cats, setOrder_cats] = useState([]);\r\n    const [show_modal, setShow_modal] = useState(false);\r\n    const [cat_title, setCat_title] = useState('');\r\n    const [cat_descr, setCat_descr] = useState('');\r\n    const [add_flag, setAdd_flag] = useState('A');\r\n    const [category_id, setCategory_id] = useState('');\r\n\r\n\r\n    const headers = authHeader();\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    console.log(AuthService.API_URL);\r\n    // fetch order formats data \r\n    const fetch_order_cats = AuthService.API_URL + 'fetch_order_cats';\r\n    const post_order_cats = AuthService.API_URL + 'post_order_cat';\r\n    useEffect(() => {\r\n        axios.get(fetch_order_cats, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_cats(res.data.data)\r\n        });\r\n\r\n    }, []);\r\n\r\n    const addCat = () => {\r\n        setAdd_flag('A');\r\n        setCat_title('')\r\n        setCat_descr('')\r\n        setShow_modal(true);\r\n    }\r\n\r\n    const editCat = (id) => {\r\n        setAdd_flag('E');\r\n        setCategory_id(id);\r\n        axios.get(AuthService.API_URL + 'get_order_cat/' + id).then(res => {\r\n            console.log(res.data);\r\n            setCat_title(res.data.name)\r\n            setCat_descr(res.data.description)\r\n        })\r\n        setShow_modal(true);\r\n    }\r\n\r\n    const delCat = (id) => {\r\n        let data = '';\r\n        axios.post(AuthService.API_URL + 'delOrder_cat/' + id, data, {\r\n            headers: headers\r\n        }).then(res => {\r\n            if (res.data.code === 1) {\r\n                toast.success(res.data.msg);\r\n            } else {\r\n                toast.error('Failed to remove Item');\r\n            }\r\n            setTimeout(() => { window.location.reload() }, 1500)\r\n        }).catch(\r\n            err => toast.error('Something went wrong')\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const tb_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"name\",\r\n            label: \"Title\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"description\",\r\n            label: \"Description\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"active\",\r\n            label: \"Active\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Action',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRender: (dataIndex, rowData) => {\r\n                    return (\r\n                        <>\r\n                            <button onClick={() => editCat(rowData.rowData[0])} className=\"mr-1 btn btn-success btn-sm\"><i className=\"fa fa-edit\"></i> </button>\r\n                            <button onClick={() => delCat(rowData.rowData[0])} className=\"btn btn-danger btn-sm\"> <i className=\"fa fa-trash\"></i> </button>\r\n                        </>\r\n                    );\r\n                }\r\n            },\r\n        }\r\n    ];\r\n\r\n    const tb_data = order_cats;\r\n\r\n\r\n    // send data\r\n    const onSubmit = data => {\r\n        let url = null;\r\n        (data.add_flag === 'A') ? url = post_order_cats : url = AuthService.API_URL + 'patchOrder_cat/' + category_id;\r\n        axios.post(url, data, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_cats(res.data.data);\r\n            setShow_modal(false);\r\n            window.location.reload()\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\" dashboard-container\">\r\n            <div className=\"row mr-0\">\r\n                <AppSideNav />\r\n\r\n                <div className=\"col-sm-9\">\r\n                    <h2 className=\"mt-4\">Order Categories</h2> <hr />\r\n\r\n                    <Modal isOpen={show_modal}\r\n                        close={() => setShow_modal(false)}\r\n                        title={'Add|Edit Order Format'}\r\n                    >\r\n                        <article>\r\n                            <form\r\n                                method=\"post\"\r\n                                className=\"form\"\r\n                                encType=\"multipart/form-data\"\r\n                                onSubmit={handleSubmit(onSubmit)}\r\n                            >\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <input type=\"hidden\" value={add_flag} name=\"add_flag\" ref={register()} />\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"cat_title\">Title:</label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                id=\"cat_title\"\r\n                                                name=\"name\"\r\n                                                value={cat_title}\r\n                                                placeholder=\"Enter title of format\"\r\n                                                ref={register({ required: true })}\r\n                                                onChange={(e) => setCat_title(e.target.value)}\r\n                                            />\r\n                                            <p className=\"text_red\">{errors.name && \" Name is required\"}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"cat_descr\">Description:</label>\r\n                                            <textarea\r\n                                                rows={2}\r\n                                                className=\"form-control\"\r\n                                                id=\"cat_descr\"\r\n                                                name=\"description\"\r\n                                                value={cat_descr}\r\n                                                placeholder=\"Enter title of description\"\r\n                                                ref={register({ required: true })}\r\n                                                onChange={(e) => setCat_descr(e.target.value)}\r\n                                            />\r\n                                            <p className=\"text_red\">{errors.description && \"Description is required\"}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <button type=\"submit\" className=\"btn btn-info\">Save</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            {/* <!-- .form --> */}\r\n                        </article>\r\n                    </Modal>\r\n\r\n                    <div className=\"table-responsive mb-4\">\r\n                        <button className=\"btn btn-info btn-sm mb-2\" onClick={addCat}>\r\n                            <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>  Add\r\n                        </button>\r\n                        <MUIDataTable\r\n                            title={\"Order Formats Table\"}\r\n                            data={tb_data}\r\n                            columns={tb_columns}\r\n                            options={tb_options}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\orders.js",["220","221","222"],"import React, { useState, useEffect } from 'react'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport AppSideNav from './../dashboard.sidenav';\r\nimport { tb_options } from '../../../HOC/helpers/tables';\r\nimport AuthService from '../../../HOC/helpers/authservice';\r\nimport { authHeader } from '../../../HOC/helpers/authheader';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {renderContent} from '../../../HOC/helpers/funcs'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Orders(props) {\r\n\r\n    // states\r\n    const [order_formats, setOrder_formats] = useState([]);\r\n\r\n\r\n    const headers = authHeader();\r\n\r\n    // fetch order formats data \r\n    const fetch_orders = AuthService.API_URL + 'fetch_orders';\r\n    useEffect(() => {\r\n        let data = '';\r\n        axios.get(fetch_orders, {\r\n            headers: headers\r\n        }).then(res => {\r\n            setOrder_formats(res.data.data)\r\n        }).catch(err => {\r\n            toast.error('Something went wrong')\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const tb_columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"#\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"email\",\r\n            label: \"Email\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"pages\",\r\n            label: \"Pages\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"wordcount\",\r\n            label: \"Wordcount\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"title\",\r\n            label: \"Title\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"description\",\r\n            label: \"Description\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"active\",\r\n            label: \"Active\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            label: \"Created At\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Action',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRender: (dataIndex, rowData) => {\r\n                    return (   \r\n                        <>                     \r\n                            <Link to={`/adOrder_view/${rowData.rowData[0]}`} className=\"btn btn-success btn-sm\"><i className=\"fa fa-eye\"></i> </Link>\r\n                        </>\r\n                    );\r\n                }\r\n            },\r\n        }\r\n    ];\r\n\r\n    const tb_data = order_formats;\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\" dashboard-container\">\r\n            <div className=\"row mr-0\">            \r\n                <div className=\"col-sm-2 sidenav_dashboard\">\r\n                    <AppSideNav />\r\n                </div>\r\n\r\n                <div className=\"col-sm-10\">\r\n                    <h2>Orders</h2> <hr />\r\n\r\n \r\n\r\n                    <div className=\"table-responsive\">\r\n                       \r\n                        <MUIDataTable\r\n                            title={\"Orders Table\"}\r\n                            data={tb_data}\r\n                            columns={tb_columns}\r\n                            options={tb_options}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\order_langs.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\Academic\\archived_orders.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\context\\posts.context.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\reducers\\post.reducer.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\index.js",["223"],"import React from 'react'\r\nimport DashboardSidenav from './dashboard.sidenav'\r\n\r\n\r\nexport default function Index(props) {\r\n\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-dark sticky-top bg-success flex-md-nowrap p-0 shadow\">\r\n                <div className=\"float-right\">\r\n                    <button class=\"navbar-toggler d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n                <ul class=\"navbar-nav px-3\">\r\n                    <li class=\"nav-item text-nowrap\">\r\n                        <a class=\"nav-link\" href=\"#\">Sign out</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <DashboardSidenav />\r\n                    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\"><div class=\"chartjs-size-monitor\"><div class=\"chartjs-size-monitor-expand\"><div class=\"\"></div></div><div class=\"chartjs-size-monitor-shrink\"><div class=\"\"></div></div></div>\r\n                        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                            <h1 class=\"h2\">Dashboard</h1>\r\n                            <div class=\"btn-toolbar mb-2 mb-md-0\">\r\n                                <div class=\"btn-group mr-2\">\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Share</button>\r\n                                    <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Export</button>\r\n                                </div>\r\n                                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\r\n                                    This week\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\academics\\nav.academics.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\authheader.js",["224"],"import React from 'react';\r\n\r\n\r\nexport function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.access_token) {\r\n      return { \r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + user.access_token \r\n      };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\Components\\dashboard\\dashboard.sidenav.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\tables.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\funcs.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\HOC\\helpers\\skeleton.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\reducers\\featuredpost.reducer.js",[],"D:\\workspace\\ReactApps\\react-bootstrap4-researchbrisk-\\src\\store\\context\\featuredpost.context.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":16,"column":37,"nodeType":"231","messageId":"232","endLine":16,"endColumn":43},{"ruleId":"229","severity":1,"message":"233","line":1,"column":18,"nodeType":"231","messageId":"232","endLine":1,"endColumn":28},{"ruleId":"229","severity":1,"message":"234","line":24,"column":12,"nodeType":"231","messageId":"232","endLine":24,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":26,"column":16,"nodeType":"237","endLine":41,"endColumn":6},{"ruleId":"235","severity":1,"message":"238","line":41,"column":8,"nodeType":"239","endLine":41,"endColumn":10,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":151,"column":102,"nodeType":"243","endLine":151,"endColumn":114},{"ruleId":"241","severity":1,"message":"242","line":151,"column":159,"nodeType":"243","endLine":151,"endColumn":171},{"ruleId":"241","severity":1,"message":"242","line":161,"column":102,"nodeType":"243","endLine":161,"endColumn":114},{"ruleId":"241","severity":1,"message":"242","line":161,"column":159,"nodeType":"243","endLine":161,"endColumn":171},{"ruleId":"241","severity":1,"message":"242","line":172,"column":110,"nodeType":"243","endLine":172,"endColumn":122},{"ruleId":"229","severity":1,"message":"244","line":10,"column":12,"nodeType":"231","messageId":"232","endLine":10,"endColumn":19},{"ruleId":"229","severity":1,"message":"245","line":10,"column":21,"nodeType":"231","messageId":"232","endLine":10,"endColumn":31},{"ruleId":"229","severity":1,"message":"246","line":11,"column":12,"nodeType":"231","messageId":"232","endLine":11,"endColumn":20},{"ruleId":"229","severity":1,"message":"247","line":11,"column":22,"nodeType":"231","messageId":"232","endLine":11,"endColumn":33},{"ruleId":"229","severity":1,"message":"248","line":25,"column":22,"nodeType":"231","messageId":"232","endLine":25,"endColumn":27},{"ruleId":"235","severity":1,"message":"236","line":12,"column":15,"nodeType":"237","endLine":24,"endColumn":6},{"ruleId":"235","severity":1,"message":"249","line":24,"column":8,"nodeType":"239","endLine":24,"endColumn":10,"suggestions":"250"},{"ruleId":"235","severity":1,"message":"236","line":15,"column":15,"nodeType":"237","endLine":26,"endColumn":6},{"ruleId":"235","severity":1,"message":"251","line":26,"column":8,"nodeType":"239","endLine":26,"endColumn":10,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":15,"column":103,"nodeType":"255","endLine":15,"endColumn":128},{"ruleId":"253","severity":1,"message":"254","line":18,"column":102,"nodeType":"255","endLine":18,"endColumn":127},{"ruleId":"253","severity":1,"message":"254","line":21,"column":103,"nodeType":"255","endLine":21,"endColumn":128},{"ruleId":"241","severity":1,"message":"242","line":19,"column":29,"nodeType":"243","endLine":19,"endColumn":166},{"ruleId":"241","severity":1,"message":"242","line":24,"column":37,"nodeType":"243","endLine":24,"endColumn":67},{"ruleId":"241","severity":1,"message":"242","line":33,"column":37,"nodeType":"243","endLine":33,"endColumn":67},{"ruleId":"235","severity":1,"message":"256","line":38,"column":8,"nodeType":"239","endLine":38,"endColumn":10,"suggestions":"257"},{"ruleId":"229","severity":1,"message":"258","line":13,"column":22,"nodeType":"231","messageId":"232","endLine":13,"endColumn":33},{"ruleId":"229","severity":1,"message":"259","line":14,"column":12,"nodeType":"231","messageId":"232","endLine":14,"endColumn":23},{"ruleId":"235","severity":1,"message":"260","line":43,"column":8,"nodeType":"239","endLine":43,"endColumn":10,"suggestions":"261"},{"ruleId":"235","severity":1,"message":"262","line":39,"column":8,"nodeType":"239","endLine":39,"endColumn":10,"suggestions":"263"},{"ruleId":"229","severity":1,"message":"264","line":11,"column":9,"nodeType":"231","messageId":"232","endLine":11,"endColumn":22},{"ruleId":"229","severity":1,"message":"265","line":26,"column":13,"nodeType":"231","messageId":"232","endLine":26,"endColumn":17},{"ruleId":"235","severity":1,"message":"266","line":35,"column":8,"nodeType":"239","endLine":35,"endColumn":10,"suggestions":"267"},{"ruleId":"241","severity":1,"message":"242","line":17,"column":25,"nodeType":"243","endLine":17,"endColumn":54},{"ruleId":"229","severity":1,"message":"268","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":13},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'comments' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'headers' and 'post_id'. Either include them or remove the dependency array.","ArrayExpression",["271"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'feedback' is assigned a value but never used.","'setFeedback' is assigned a value but never used.","'reset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'meta_postshighlight'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'meta_posts'. Either include it or remove the dependency array.",["273"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'fetch_order_formats' and 'headers'. Either include them or remove the dependency array.",["274"],"'setAdd_flag' is assigned a value but never used.","'order_miscs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'fetch_order_cats' and 'headers'. Either include them or remove the dependency array.",["276"],"'renderContent' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetch_orders' and 'headers'. Either include them or remove the dependency array.",["277"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [headers, post_id]",{"range":"292","text":"293"},"Update the dependencies array to be: [meta_postshighlight]",{"range":"294","text":"295"},"Update the dependencies array to be: [meta_posts]",{"range":"296","text":"297"},"Update the dependencies array to be: [fetch_order_formats, headers]",{"range":"298","text":"299"},"Update the dependencies array to be: [headers]",{"range":"300","text":"301"},"Update the dependencies array to be: [fetch_order_cats, headers]",{"range":"302","text":"303"},"Update the dependencies array to be: [fetch_orders, headers]",{"range":"304","text":"305"},[1375,1377],"[headers, post_id]",[1054,1056],"[meta_postshighlight]",[994,996],"[meta_posts]",[1413,1415],"[fetch_order_formats, headers]",[1495,1497],"[headers]",[1380,1382],"[fetch_order_cats, headers]",[1045,1047],"[fetch_orders, headers]"]